<Window x:Class="Azyobuzi.Azyotter.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:Azyobuzi.Azyotter.Views"
        xmlns:vm="clr-namespace:Azyobuzi.Azyotter.ViewModels"
        xmlns:ai="clr-namespace:Azyobuzi.Azyotter.Interactivity"
        DataContext="{DynamicResource MainWindowViewModel}"
        Title="{Binding Version, StringFormat={}Azyotter {0}}"
        Height="500" Width="650"
        Icon="/Azyotter;component/Icon/tw_azyobuzi.ico" Loaded="Window_Loaded">
    
    <Window.Resources>
        <vm:MainWindowViewModel x:Key="MainWindowViewModel"/>
    </Window.Resources>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </i:EventTrigger>
        
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}"/>
        </i:EventTrigger>
        
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="WindowAction">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>
        
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="ShowInputPinWindow">
            <l:TransitionInteractionMessageAction WindowType="v:InputPinWindow" Mode="Modal"/>
        </l:InteractionMessageTrigger>
        
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="ShowInfomation">
            <l:InformationDialogInteractionMessageAction/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>
    
    <Grid>        
        <Grid Margin="0,24,0,0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            
            <TabControl Grid.Row="0" ItemsSource="{Binding Tabs}" SelectedItem="{Binding SelectedTab}">
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Focusable" Value="False"/>
                        <EventSetter Event="PreviewMouseDown" Handler="TabItem_PreviewMouseDown"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border Name="border"
                                            Margin="0,3,0,0"
                                            Focusable="False"
                                            BorderBrush="Gray"
                                            BorderThickness="1"
                                            CornerRadius="3,3,0,0">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="White" Offset="0" />
                                                <GradientStop Color="#FFEDECE7" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>

                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <Border Name="selectedBorder"
                                                    Grid.Row="0"
                                                    BorderThickness="1,1,1,0"
                                                    CornerRadius="3,3,0,0"
                                                    BorderBrush="#FFE68B2C"
                                                    Visibility="Collapsed">
                                                <Rectangle Fill="#FFFFC73C"
                                                           Height="2"/>
                                            </Border>

                                            <ContentPresenter Grid.Row="1"
                                                              ContentSource="Header"
                                                              Margin="10,2,10,2"/>
                                        </Grid>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Panel.ZIndex" Value="100" />
                                            <Setter TargetName="border" Property="Background" Value="White" />
                                            <Setter TargetName="border" Property="BorderThickness" Value="1,0,1,0" />
                                            <Setter TargetName="border" Property="Margin" Value="-1,0,-1,0"/>
                                            <Setter TargetName="selectedBorder" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
                
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <v:LoadingCircle Width="16" Height="16">
                                <v:LoadingCircle.Style>
                                    <Style TargetType="v:LoadingCircle">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsRefreshing}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </v:LoadingCircle.Style>
                            </v:LoadingCircle>
                            
                            <Button Name="notifyError"
                                    Width="16" Height="16"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    Command="{Binding ClearErrorMessageCommand}"
                                    ToolTip="{Binding LastErrorMessage}"
                                    ToolTipService.InitialShowDelay="0"
                                    ToolTipService.BetweenShowDelay="0">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding LastErrorMessageIsNotEmpty}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>

                                <Image Source="/Azyotter;component/Images/009_HighPriority_16x16_72.png" />
                            </Button>
                            
                            <TextBlock Text="{Binding Name}"/>
                        </StackPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <ListBox ItemsSource="{Binding Items}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 HorizontalContentAlignment="Stretch"
                                 SelectionMode="Extended"
                                 ai:ListBoxBehavior.SelectedItems="{Binding SelectedItems}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding Source={StaticResource MainWindowViewModel}, Path=ReplyCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            
                            <ListBox.Resources>
                                <!--選択時の背景-->
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                                 Color="Transparent"/>
                                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                                                 Color="Transparent"/>
                                
                                <!--選択時の文字色-->
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                                 Color="Black"/>
                            </ListBox.Resources>
                            
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderBrush="LightGray" BorderThickness="0,0,0,1">
                                        <Border BorderThickness="3">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                            <Setter Property="BorderBrush" Value="LightGreen"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            
                                            <Grid>
                                                <Grid.Resources>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                                    </Style>
                                                </Grid.Resources>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="40"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>

                                                <Image Grid.Column="0"
                                                       Source="{Binding FromProfileImageUrl}"
                                                       VerticalAlignment="Top"
                                                       Stretch="Uniform"/>

                                                <StackPanel Grid.Column="1" Margin="3,0,0,0">
                                                    <TextBlock FontWeight="Bold">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}{0}/{1}">
                                                        <Binding Path="FromScreenName"/>
                                                        <Binding Path="FromUserName"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                                    </TextBlock>

                                                    <v:TimelineItemPlainText Inlines="{Binding Text}">
                                                        <v:TimelineItemPlainText.Style>
                                                            <Style TargetType="v:TimelineItemPlainText">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </v:TimelineItemPlainText.Style>
                                                    </v:TimelineItemPlainText>

                                                    <v:TimelineItemRichText Inlines="{Binding Text}"
                                                                            InputMethod.IsInputMethodEnabled="False">
                                                        <v:TimelineItemRichText.Style>
                                                            <Style TargetType="v:TimelineItemRichText">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </v:TimelineItemRichText.Style>
                                                    </v:TimelineItemRichText>

                                                    <TextBlock Text="{Binding Path=CreatedAt, StringFormat=\{0:HH:mm:ss\}}"
                                                               HorizontalAlignment="Right"/>
                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>

            <!--使わなかったらそのうち削除-->
            <StatusBar Grid.Row="1" IsTabStop="False" Visibility="Collapsed">
                <TextBlock Text="Ready"/>
            </StatusBar>
        </Grid>

        <Grid Height="24" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="50"/>
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0"
                     AcceptsReturn="True"
                     TextWrapping="Wrap"
                     VerticalScrollBarVisibility="Auto"
                     Text="{Binding PostText, UpdateSourceTrigger=PropertyChanged}"/>

            <Button Grid.Column="1"
                    IsTabStop="False"
                    Command="{Binding PostCommand}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPosting}" Value="False">
                                <Setter Property="Content" Value="投稿"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPosting}" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <v:LoadingCircle Width="16" Height="16"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="GotFocus">
                    <ei:ChangePropertyAction PropertyName="Height" Value="48"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="LostFocus">
                    <ei:ChangePropertyAction PropertyName="Height" Value="24"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPosting}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </Grid>
</Window>
